<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- primary colors -->
    <SolidColorBrush x:Key="PrimaryBlue" Color="#FF2CB9F5"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryWhite" Color="#dddddd"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryGreen" Color="#00bb66"></SolidColorBrush>

    <!-- secondary colors -->
    <SolidColorBrush x:Key="SecondaryBlue" Color="#bb0875b1"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryWhite" Color="#aaaaaa"></SolidColorBrush>
    <SolidColorBrush x:Key="DarkGray" Color="#333333"></SolidColorBrush>

    <!-- general purpose button-->
    <Style TargetType="{x:Type Button}" x:Key="GeneralPurposeButton">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlue}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource DarkGray}" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryBlue}"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryGreen}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- close button-->
    <Style TargetType="{x:Type Button}" x:Key="CloseButton">
        <Setter Property="Background" Value="DarkRed"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource DarkGray}" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#cc0000"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--picture button -->
    <Style TargetType="{x:Type Button}" x:Key="PictureButton">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource DarkGray}" BorderThickness="0" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type TextBox}" x:Key="NormalTextBox">
        <Setter Property="Background" Value="{DynamicResource PrimaryWhite}"/>
        <Setter Property="Text" Value=""/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" />
                            <TextBlock
                                x:Name="PlaceHolder1"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                IsHitTestVisible="False"
                                Opacity="0.5"
                                Text="http://youripaddres.com:portNumber"
                                Visibility="Hidden" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                        TargetName="PlaceHolder1"
                                        Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>